
library.category.label.howToPlay.startHereKeyboard=START HERE - KEYBOARD	#keyboard refers to the input device (e.g. mouse and keyboard)
library.category.title.howToPlay.startHereKeyboard=Start Here - Keyboard	#keyboard refers to the input device (e.g. mouse and keyboard)
library.category.label.howToPlay.startHereTouch=START HERE - TOUCH	#touch refers to the form of input (e.g. touch vs. mouse and keyboard)
library.category.title.howToPlay.startHereTouch=Start Here - Touch	#touch refers to the form of input (e.g. touch vs. mouse and keyboard)

tag.touch=Touch	#touch refers to the form of input (e.g. touch vs. mouse and keyboard)
tag.keyboard=Keyboard & Mouse	#

library.category.label.computerScience.codingFunTouch=CODING FUNDAMENTALS - TOUCH	#touch refers to the form of input (e.g. touch vs. mouse and keyboard)
library.category.title.computerScience.codingFunTouch=Coding FUNdamentals - Touch	#touch refers to the form of input (e.g. touch vs. mouse and keyboard)
library.category.label.computerScience.codingFunKeyboard=CODING FUNDAMENTALS - KEYBOARD	#keyboard refers to the input device (e.g. mouse and keyboard)
library.category.title.computerScience.codingFunKeyboard=Coding FUNdamentals - Keyboard	#keyboard refers to the input device (e.g. mouse and keyboard)
library.category.computerScience.coding_fundamentals.label=CODING FUNDAMENTALS	# 
library.category.computerScience.coding_fundamentals.title=Coding Fundamentals	# 
library.category.computerScience.cybersecurity.label=CYBERSECURITY	#
library.category.computerScience.cybersecurity.title=Cybersecurity	#
library.category.computerScience.digital_skills.description=Explore digital fluency and digital citizenship skills with this collection of featured lessons. Learn about handling online personal safety and privacy, travel through a history of technology, use coding to tell classic tales and discover theÂ Agent and code builder.	#
library.category.computerScience.digital_skills.label=DIGITAL SKILLS	#
library.category.computerScience.digital_skills.title=Digital Skills	#
library.category.computerScience.fundamentals_keyboard.label=KEYBOARD	#
library.category.computerScience.fundamentals_keyboard.title=Keyboard	#
library.category.computerScience.fundamentals_touch.label=TOUCH	#
library.category.computerScience.fundamentals_touch.title=Touch	#
library.category.computerScience.lower_primary.description=Introduce computational thinking with block-based coding to support skill development in computer science concepts.	# Changed: New Description for Block Coding, Lower Primary
library.category.computerScience.lower_primary.label=LOWER PRIMARY	# 
library.category.computerScience.lower_primary.title=Lower Primary	# 
library.category.computerScience.python_101_mc.description=New to Python? Start coding Python in Minecraft with MakeCode! Python 101 is the first collection in the Programming with Python Upper Secondary (Grades 9-12|Ages 14-18) computer science progression. In this part of the progression, students are transitioning over to text-based programming utilizing Python using Makecode. Learn the basics of Python, including syntax, data types, variables, conditionals, 'for' and conditional loops, lists and functions.	#
library.category.computerScience.python_101_mc.label=PYTHON 101-MAKECODE	#
library.category.computerScience.python_101_mc.title=Python 101-Makecode	#
library.category.computerScience.python_101_nb.description=Ready to level up your Python? Start coding Python in Minecraft with Azure Notebooks, the notebook-style code editor used in industry.  Notebooks expands the concepts and code available to learn in Minecraft. Python 101 is the first collection in the Programming with Python Upper Secondary (Grades 9-12|Ages 14-18) computer science progression. In this part of the progression, students start their text-based programming journey utilizing Python with Notebooks to learn the basics of Python, including syntax, data types, variables, conditionals, 'for' and conditional loops, lists and functions.	#
library.category.computerScience.python_101_nb.label=PYTHON 101-NOTEBOOKS	#
library.category.computerScience.python_101_nb.title=Python 101-Notebooks	#
library.category.computerScience.seymour_island.label=SEYMOUR ISLAND	#
library.category.computerScience.seymour_island.title=Seymour Island	#
library.category.computerScience.transition_python.label=TRANSITION TO PYTHON	#
library.category.computerScience.transition_python.title=Transition to Python	#
library.category.computerScience.upper_primary.label=UPPER PRIMARY	#
library.category.computerScience.upper_primary.title=Upper Primary	#
library.category.description.build_plates=Use these pre-created build plates as a springboard to create your own lesson content.	#
library.category.description.computerScience.ai=Introduce students to the power of artificial intelligence (AI) across a range of exciting real world scenarios. Students will help people in remote areas, preserve wildlife and ecosystems, and research climate change. Easy self-guided tutorials allow students to experience a conceptual development of AI in a series of steps, including the collection of data, dataset creation, machine learning, and analyzing results.	#
library.category.description.computerScience.gamecode=GameCode offers an immersive and innovative approach to game development, game design and coding. Blending the thrill of gaming and Minecraft, students will craft their very own arcade-style and embark on an exciting journey where creativity and logic intertwine.	#
library.category.description.computerScience.computingWithMinecraft=Build your own city with these computer science lessons based on CSTA standards. Learn basic CS concepts including loops, algorithms, conditionals, debugging, iteration, and more.	# GameCode should not be translated
library.category.description.computerScience.hourOfCode=The Hour of Code began in 2013 as a one-hour introduction to computer science, designed to show that everyone can learn the basics of coding. These lessons offer a fun, introductory experience to coding in Minecraft, and are a fit for learners of all ages.	#
library.category.description.computerScience.languageAgnostic=If you want to zero in on a specific coding concept, this is the place to start! Learn how to use loops, sequencing, conditionals, variables, and functions. In these lessons you can choose to code in Blocks, Python, or JavaScript.	#
library.category.description.computerScience.python.python_islands=Welcome to the Kingdom of the Floating Islands! This mystical kingdom floats high above the world below. In this collection of lessons, students will learn the basics of Python through a series of themed tasks in each world. Complete these tasks to help the kingdom to develop and thrive!	#
library.category.description.enviroment_sustainability=These worlds and lessons focus on the environment and sustainability. Explore sustainable cities, alternative energy, and build creative solutions to combat climate change.	#
library.category.description.equity_and_inclusion=These worlds and activities focus on equity and inclusion. Concepts include social justice, identity, and tolerance.	#
library.category.description.esports.challenge_series=Build your esports skills with a variety of Minecraft challenges each designed to strengthen building, creativity, problem-solving, coding and teamwork skills. Use the arena template to introduce players to team play and faster a sense of healthy competition among students.	#
library.category.description.esports.build_battles=Esports offers students and educators a platform for creative, collaborative and competitive engagement. The Build Battles category includes practice maps for up to 12 teams, a competition arena for six teams, and a series of two-team Make & Model maps. These exciting esports worlds promote social emotional skills and new pathways for learning and assessment.	#
library.category.description.esports.speedruns=In Speed Runs players compete in high-energy challenges racing against the clock to complete tasks. It's not just about speed, it's about smart thinking and problem solving. This blend of fast-paced competition and immersive learning is where strategy, creativity and quick thinking are the keys to victory.	#
library.category.description.history=These worlds and lessons focus on history and culture. Travel to famous cities both past and present, create your own museum, and learn about cultures from around the world.	#
library.category.description.starter=Use this collection of worlds and biomes to help get started creating lessons in Minecraft Education.	#
library.category.label.climate_sustainability=CLIMATE & SUSTAINABILITY	# Library category name, Context is Environmental & Earth Sciences
library.category.label.computerScience.ai=ARTIFICIAL INTELLIGENCE	#
library.category.label.computerScience.gamecode=GAMECODE	# GameCode should not be translated
library.category.label.computerScience.coding_tutorials=CODING TUTORIALS	#
library.category.label.computerScience.computingWithMinecraft=COMPUTING WITH MINECRAFT	#
library.category.label.computerScience.languageAgnostic=LANGUAGE-AGNOSTIC	#
library.category.label.computerScience.python.python_101=PYTHON 101	#
library.category.label.computerScience.python.python_islands=PYTHON ISLANDS	#
library.category.label.enviroment_sustainability=ENVIRONMENT & SUSTAINABILITY	# Library category name, Context is Environmental & Earth Sciences
library.category.label.equity_and_inclusion=EQUITY & INCLUSION	# Library category name
library.category.label.esports=ESPORTS	#
library.category.label.esports.challenge_series=CHALLENGE SERIES	#
library.category.label.esports.speedruns=SPEED RUNS	#
library.category.label.esports.build_battles=BUILD BATTLES	#
library.category.label.languageArts=LITERACY & LANGUAGE	# Library category name
library.category.label.starter=STARTER WORLDS	# minecraft worlds to help you get started building
library.category.label.starter.build_plates=BUILD PLATES	# basic minecraft worlds on which to build your own structure
library.category.label.subject_kits=SUBJECT KITS	#
library.category.title.climate_sustainability=Climate & Sustainability	# Library category name, Context is Environmental & Earth Sciences
library.category.title.computerScience.ai=Artificial Intelligence	#
library.category.title.computerScience.gamecode=GameCode	# GameCode should not be translated
library.category.title.computerScience.coding_tutorials=Coding Tutorials	#
library.category.title.computerScience.computingWithMinecraft=Computing with Minecraft	#
library.category.title.computerScience.languageAgnostic=Language-Agnostic	#
library.category.title.computerScience.python.python_101=Python 101	#
library.category.title.computerScience.python.python_islands=Python Islands	#
library.category.title.enviroment_sustainability=Environment & Sustainability	# Library category name, Context is Environmental & Earth Sciences
library.category.title.equity_and_inclusion=Equity and Inclusion	# Library category name
library.category.title.esports=Esports	#
library.category.title.esports.challenge_series=Challenge Series	#
library.category.title.esports.speedruns=Speed Runs	#
library.category.title.esports.build_battles=Build Battles	#
library.category.title.languageArts=Literacy & Language	# Library category name
library.category.title.starter=Starter Worlds	# minecraft worlds to help you get started building
library.category.title.starter.build_plates=Build Plates	# basic minecraft worlds on which to build your own structure
library.category.title.subject_kits=Subject Kits	#
tag.artificial_intelligence=Artificial Intelligence	#
tag.gamecode=GameCode	# GameCode should not be translated
tag.build_plates=Build Plates	# basic minecraft worlds on which to build your own structure
tag.challenge_series=Challenge Series	# a set of challenges
tag.climate=Climate	# referring to the weather of the Earth, in the context of Environmental & Earth Sciences. For example climate change.
tag.speedruns=Speed Runs	#
tag.equity_and_inclusion=Equity and Inclusion	#
tag.esports=Esports	#
tag.build_battles=Build Battles	# A competition for building in Minecraft
tag.python101=Python 101	#
tag.python_islands=Python Islands	#
tag.sustainability=Sustainability	# referring to the avoidance of the depletion of natural resources in order to maintain an ecological balance. The study of environmental sustainability


library.category.description.computerScience=The Minecraft Computer Science Subject Kit provides standards-based lessons, allowing students to learn, practice, and apply computer science skills in coding, cyber, and AI. With a variety of tutorials and coding experiences, it supports learners at all stages of their Computer Science journey.	#

library.category.computerScience.block_based.title=Block Coding	#Library category name, Context is Computer Science
library.category.computerScience.block_based.label=BLOCK CODING	#Library category name, Context is Computer Science
library.category.description.computerScience.blockcoding=Unleash your creativity and cultivate computational thinking with block coding. Build, program, and explore Minecraft worlds. Hone problem-solving skills through drag-and-drop visual programming, making coding accessible, and enjoyable for learners of all ages.	#

library.category.computerScience.coding_with_python.label=CODING WITH PYTHON	#
library.category.computerScience.coding_with_python.title=Coding with Python	#
library.category.description.computerScience.codingwithpython=Embark on a journey of creativity and computational thinking with Python Notebooks. Dive into Python 101 or advance into Python Islands to construct interactive projects and foster problem-solving abilities.	#

library.category.title.computerScience.cyber=Cyber	#Cyber is related to IT and computers
library.category.label.computerScience.cyber=CYBER	#Cyber is related to IT and computers
library.category.description.computerScience.cyber=Master essential cybersecurity and digital citizenship skills with CyberSafe and Cyber Fundamentals. Explore curated lessons and learn about online safety, data privacy, ciphers, and cyberethics. Cyber education is inclusive and offers insights into thrilling cyber careers.	#

library.category.computerScience.cyberSafe.title=CyberSafe	#CyberSafe is short for safe computer use
library.category.computerScience.cyberSafe.label=CYBERSAFE	#CyberSafe is short for safe computer use
library.category.description.computerScience.cyberSafe=Introducing "CyberSafe," an introductory collection of engaging lessons for ages 7-18. Learn essential digital citizenship skills, recognize online threats, safeguard personal data, explore cloud technology, and build defenses against cyber challenges.	#

library.category.computerScience.cyberFundamentals=Cyber Fundamentals	#fundamentals of IT computing
library.category.computerScience.cyberFundamentals.label=CYBER FUNDAMENTALS	#Cfundamentals of IT computing
library.category.description.computerScience.cyberFundamentals=Embark on an immersive cyber journey with "Cyber Fundamentals," a collection of three adventurous lessons where students must safeguard their school from digital threats, mastering encryption, strengthening defenses, and embracing cyberethics. Aligned with cyber.org standards, this exciting introduction to cybersecurity careers highlights their vital role in our digital world.	#

library.category.computerScience.cyberexpert.title=Cyber Expert	#Cyber expert is short for cybersecurity expert
library.category.computerScience.cyberexpert.label=CYBER EXPERT	#Cyber expert is short for cybersecurity expert
library.category.description.computerScience.cyberexpert=Minecraft's Cyber Expert collection, in partnership with Florida International Universityâs Knight School of Computing and Information Sciences, offers secondary students foundational cybersecurity education through three interactive maps. Students explore encryption, decryption, and defense against cyber attacks, gaining hands-on experience in managing malware and understanding industry-relevant standards.	#

library.category.computerScience.cyberdefender.title=Cyber Defender	#Cyber Defender of digital attacks
library.category.computerScience.cyberdefender.label=CYBER DEFENDER	#Cyber Defender of digital attacks
library.category.description.computerScience.cyberdefender=Enemies are on their way. Prepare your defenses! Cyber Defender pits you against wave after wave of invaders in a tower-defense learning experience. Learn cybersecurity tactics as you combat digital invaders. Engaging with waves of attackers, you will gain insights into real-world digital threats and potential cybersecurity careers.	#


library.category.computerScience.seymourisland.description=Seymour Island is an open-world multiplayer adventure with 11 coding tasks designed for full-class collaboration in either MakeCode Blocks or Python, accommodating students' coding preferences and levels. Additionally, a cryptography/code cracking side quest with hidden robots adds an exciting challenge to the experience.	#

library.category.computerScience.secondary.title=Secondary	#secondary is referring to high school level schooling
library.category.computerScience.secondary.label=SECONDARY	#secondary is referring to high school level schooling
library.category.description.computerScience.secondary=Learn conditionals, functions, coordinates, AI, and more with these 10 computer science lessons based on CSTA standards. Includes a final project as the unit capstone.	#

library.category.computerScience.upper_primary.description=Introduce computational thinking and coding fundamentals to upper primary students with block-based coding. This comprehensive collection includes 24 engaging lessons that cover algorithms, sequencing, loops, conditionals, operators, events, variables, and functions. Embark on an exciting exploration of artificial intelligence to unlock its potential.	#
library.category.description.computerScience.codingfundamentals=Embark on a coding journey from algorithms, sequencing, and loops to conditionals, operators, events, variables, and functions. These 18 block-based lessons, divided into 3 blocks, provide comprehensive instruction in coding essentials, fostering computational thinking and problem-solving skills.	#
library.category.description.computerScience.codingFunkeyboard=For keyboard use. Embark on a coding journey from algorithms, sequencing, and loops to conditionals, operators, events, variables, and functions. These 18 block-based lessons, divided into 3 blocks, provide comprehensive instruction in coding essentials, fostering computational thinking and problem-solving skills.	#
library.category.description.computerScience.codingFunTouch=For touch device use. Embark on a coding journey from algorithms, sequencing, and loops to conditionals, operators, events, variables, and functions. These 18 block-based lessons, divided into 3 blocks, provide comprehensive instruction in coding essentials, fostering computational thinking and problem-solving skills.	#
library.category.description.computerScience.codingFun1=Coding Fundamentals: Part 1 â Animal Research Center is a part of the Upper Primary (Grades 3-5|Ages 8-11) computer science progression. Students are focusing on developing and using coding concepts, such as loops, conditionals, and debugging. Students are also building out their digital fluency skills as they analyze the credibility of different sources when researching to find out more information about animals.	#
library.category.description.computerScience.codingFun2=Coding Fundamentals: Part 2 â Minecraft Space Center follows from the Animal Research Center, expanding skills into an adventure setting in space - the final frontier! Practice loops, conditionals, debugging, and write programs within Code Builder.	#
library.category.description.computerScience.codingFun3=Coding Fundamentals: Part 3 â Running Out of Time is the concluding unit, where students will have multiple opportunities to manipulate and build out their own programs within Code Builder and collaborate during with multiplayer experiences. Includes a final research team project.	#

library.category.title.science.space=Space	#space as in astronauts and astronomy
library.category.label.science.space=SPACE	#space as in astronauts and astronomy

library.category.title.literacy=Literacy & Language	#
library.category.label.literacy=LITERACY & LANGUAGE	#
edu.play_screen.view_library=LESSON LIBRARY	#
edu.play_screen.view_worlds=MY WORLDS	#Was previously View My Worlds